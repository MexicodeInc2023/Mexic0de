---
export interface Props {
  title: string;
}

const { title } = Astro.props;

import Navbar from "../components/Navbar.astro";
import "../styles/global.css";
---

<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link
      href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css"
      rel="stylesheet"
    />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <div id="loader">
      <div class="loader">
        <div class="cell d-0"></div>
        <div class="cell d-1"></div>
        <div class="cell d-2"></div>

        <div class="cell d-1"></div>
        <div class="cell d-2"></div>

        <div class="cell d-2"></div>
        <div class="cell d-3"></div>

        <div class="cell d-3"></div>
        <div class="cell d-4"></div>
      </div>
    </div>
    <div id="content">
      <Navbar />
      <slot />
    </div>
  </body>
</html>

<style>
  html {
    scroll-behavior: smooth;
  }
  body {
    background-color: var(--green);
    color: var(--light);
    overflow: auto;
    scroll-snap-type: y mandatory;
  }
  /*  body {
    min-height: calc(100vh + 400px);
    overflow-x: hidden;
    overflow-y: scroll;
    background-color: var(--light);
  } */

  /* Loader css */
  #content {
    display: none;
    animation: fade-in 1s ease-in-out forwards;
  }

  @keyframes fade-in {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  #loader {
    position: fixed;
    top: 0;
    left: 0;
    z-index: 9999;
    width: 100%;
    height: 100%;
    background-color: var(--green);
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .loader {
    --cell-size: 52px;
    --cell-spacing: 1px;
    --cells: 3;
    --total-size: calc(
      var(--cells) * (var(--cell-size) + 2 * var(--cell-spacing))
    );
    display: flex;
    flex-wrap: wrap;
    width: var(--total-size);
    height: var(--total-size);
  }

  .cell {
    flex: 0 0 var(--cell-size);
    margin: var(--cell-spacing);
    background-color: transparent;
    box-sizing: border-box;
    border-radius: 4px;
    animation: 1.5s ripple ease infinite;
  }

  .cell.d-1 {
    animation-delay: 100ms;
  }

  .cell.d-2 {
    animation-delay: 200ms;
  }

  .cell.d-3 {
    animation-delay: 300ms;
  }

  .cell.d-4 {
    animation-delay: 400ms;
  }

  .cell:nth-child(1) {
    --cell-color: #00ff87;
  }

  .cell:nth-child(2) {
    --cell-color: #0cfd95;
  }

  .cell:nth-child(3) {
    --cell-color: #17fba2;
  }

  .cell:nth-child(4) {
    --cell-color: #23f9b2;
  }

  .cell:nth-child(5) {
    --cell-color: #30f7c3;
  }

  .cell:nth-child(6) {
    --cell-color: #3df5d4;
  }

  .cell:nth-child(7) {
    --cell-color: #45f4de;
  }

  .cell:nth-child(8) {
    --cell-color: #53f1f0;
  }

  .cell:nth-child(9) {
    --cell-color: #60efff;
  }

  /*Animation*/
  @keyframes ripple {
    0% {
      background-color: transparent;
    }

    30% {
      background-color: var(--cell-color);
    }

    60% {
      background-color: transparent;
    }

    100% {
      background-color: transparent;
    }
  }
</style>

<script>
  window.addEventListener("load", () => {
    const loader = document.getElementById("loader");
    const content = document.getElementById("content");
    setTimeout(() => {
      loader.style.display = "none";
      content.style.display = "block";
    }, 1000);
  });
</script>
